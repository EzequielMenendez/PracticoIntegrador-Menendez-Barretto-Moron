from componentes.validaciones import *

def listar_paises(paises):
    for pais in paises:
        print(f"{pais['nombre']} - {pais['poblacion']} habitantes - {pais['superficie']} km2 - {pais['continente']}")

#Funci칩n para continuar al men칰
def tecla_para_continuar():
    input("Presione una tecla para continuar... ")

#Funci칩n para imprimir una lista
def imprimir_lista(lista):
    separador()
    for elemento in lista:
        print(elemento)

#Funci칩n para pedir un n칰mero entero valido
def pedir_entero(mensaje):
    """Pide un numero entero por consola y controla errores."""
    while True:
        valor = input(mensaje)
        valor = parsear_numero(valor)
        if not valor:
            print("Error: debe ingresar un numero entero valido positivo. 游댮")
        else:
            return valor

#Funci칩n para pedir y validar un pa칤s
def pedir_pais(mensaje, paises):
    """Pide un string por consola, valida el texto y que el pa칤s no este repetido"""
    while True:
        valor = input(mensaje)
        texto_valido = validar_texto(valor)
        if not texto_valido:
            print("Error: No debe ingresar un dato vacio y no puede contener n칰meros o caracteres especiales. 游댮")
            continue
        nombre_unico = validar_repetido(valor, paises)
        if not nombre_unico:
            print("Error: El pa칤s ingresado ya existe. Ingrese otro pa칤s. 游댮")
            continue
        return valor

#Funci칩n para pedir y validar un continente
def pedir_continente(mensaje):
    """Recibe un string por consola, valida el texto y que sea un continente existente"""
    continentes = ("Am칠rica","Europa","Asia","츼frica","Ocean칤a")
    while True:
        valor = input(mensaje)
        texto_valido = validar_texto(valor)
        if not texto_valido:
            print("Error: No debe ingresar un dato vacio y no puede contener n칰meros o caracteres especiales. 游댮")
            continue
        valor = buscar_continente(valor, continentes)
        
        if not valor in continentes:
            print(f"Error: El continente ingresado no es v치lido. Los continentes existentes son: {', '.join(continentes)}. 游댮")
            continue
        
        return valor

#Imprime un separador
def separador():
    print("===================================================\n")

#Imprime el formato de un t칤tulo
def titulo(texto):
    separador()
    print(f"{texto}\n")
    separador()

#Funci칩n para buscar una l칤nea en el csv
def buscar_linea(lineas, pais):
    """
        Recibe una lista de l칤neas y el pa칤s a buscar
        Recorre las l칤neas y si el pa칤s coincide guarda el n칰mero de linea y lo retorna
    """
    #Busca el pa칤s en el csv
    for i, linea in enumerate(lineas):#enumerate sirve para recorrer una lista y al mismo tiempo obtener el indice
        datos = linea.strip().split(",")
        if len(datos) and datos[0].lower() == pais.lower():
            return i

#Busca un pa칤s por coincidencia exacta
def buscar_pais(paises):
    """
        Pide por consola un pa칤s a buscar, y lo busca por coincidencia exacta
        Devuelve el nombre del pa칤s y su 칤ndice
    """
    busqueda = input("Ingrese el nombre del pa칤s a buscar: ")
    indice_encontrado = None
    pais_encontrado = None

    for i, pais in enumerate(paises):
        if busqueda.lower() == pais['nombre'].lower():
            indice_encontrado = i
            pais_encontrado = pais['nombre']
            break

    if not indice_encontrado:
        print(f"No se encontr칩 el pa칤s {busqueda}.")

    return pais_encontrado, indice_encontrado